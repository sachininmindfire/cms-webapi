name: Build and deploy .NET Core app to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Publish with dotnet
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
      
      # - name: Install EF Core CLI
      #   run: dotnet tool install --global dotnet-ef
      
      # - name: Generate EF Core migration bundle
      #   run: dotnet ef migrations script --idempotent --output ${{env.DOTNET_ROOT}}/migrations.sql --project CMS.Infrastructure/CMS.Infrastructure.csproj --startup-project CMS.API/CMS.API.csproj

      # # - name: Azure login
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # - name: Run database migrations
      #   uses: azure/sql-action@v1
      #   with:
      #     server-name: cms-dbserver.database.windows.net
      #     connection-string: ${{ secrets.DATABASE_CONNECTION_STRING }}
      #     sql-file: ${{env.DOTNET_ROOT}}/migrations.sql

            # Install the sqlcmd utility
      # - name: Install sqlcmd utility
      #   run: |
      #     curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
      #     curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
      #     sudo apt-get update
      #     sudo apt-get install -y mssql-tools unixodbc-dev
      #     echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
      #     source ~/.bashrc
          
      # # Run the SQL migration script using sqlcmd
      # - name: Run database migrations
      #   run: |
      #     # Extract connection string components from the secret
      #     # Example connection string format: "Server=server.database.windows.net;Database=mydb;User Id=user;Password=pass;"
      #     CONNECTION_STRING="${{ secrets.DATABASE_CONNECTION_STRING }}"
          
      #     # Use grep and cut to extract server, database, username and password
      #     SERVER=$(echo $CONNECTION_STRING | grep -oP 'Server=\K[^;]+')
      #     DATABASE=$(echo $CONNECTION_STRING | grep -oP 'Initial Catalog=\K[^;]+')
      #     USERNAME=$(echo $CONNECTION_STRING | grep -oP 'User ID=\K[^;]+')
      #     PASSWORD=$(echo $CONNECTION_STRING | grep -oP 'Password=\K[^;]+')
          
      #     # Run the SQL script
      #     /opt/mssql-tools/bin/sqlcmd -S $SERVER -d $DATABASE -U $USERNAME -P $PASSWORD -i ${{env.DOTNET_ROOT}}/migrations.sql -o ${{env.DOTNET_ROOT}}/migrations_output.txt
          
      #     # Check for errors
      #     if [ $? -ne 0 ]; then
      #       echo "SQL script execution failed"
      #       cat ${{env.DOTNET_ROOT}}/migrations_output.txt
      #       exit 1
      #     else
      #       echo "SQL script executed successfully"
      #     fi

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'cms-webapi-app'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{env.DOTNET_ROOT}}/myapp